BROKER SCHEMA FundsTransferPHXTitleFetch


CREATE COMPUTE MODULE Concat_Message
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET OutputRoot.Properties.MessageSet = '{PHXGDCILib}';
		SET OutputRoot.Properties.MessageType = '{stringMessage}';
		
		SET OutputRoot.XMLNSC.concatMessage.message = InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.MessageProtocol
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.Version
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.FieldInError
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.MessageType
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.TransmissionDateTime
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.DeliveryChannelType
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.DeliveryChannelID
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.CustomerID
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.TransactionCode
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.TransactionDate
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.TransactionTime
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.RetrivevalReferenceNumber
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.CustomerPINData
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.AgentID
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.ChannelSpecificDataField
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.ChannelPrivateData
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.AuthorizationResponseID
|| InputRoot.DFDL.GDCI_TitleFetch_Request.TransactionRequestHeader.ResponseCode
|| InputRoot.DFDL.GDCI_TitleFetch_Request.body.AccountBankIMD
|| InputRoot.DFDL.GDCI_TitleFetch_Request.body.AccountDetails;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
