BROKER SCHEMA GenericLogging


CREATE COMPUTE MODULE GenericLog_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		DECLARE RequestMsg character;
		SET RequestMsg=Environment.Variables.RequestMessage;
		
		DECLARE opname CHARACTER;
		SET opname = SUBSTRING(SUBSTRING(RequestMsg BEFORE ',') AFTER 'queueforwarding/');
		
		DECLARE rc BOOLEAN;
		CALL initLog4j('brokerlog.xml') into rc;
		IF ( rc = FALSE ) THEN	
			SET Environment.Variables.RequestLoggingError='Error';
		END IF;
		
		--Encoding 546
		--CCSID 1208
		CALL log4j_1_1(opname || ' - GENERIC_LOG ' || Environment.Variables.RequestTimestamp, 'MPAY_LOGGER','INFO',
		CAST( ASBITSTREAM(InputBody CCSID 1208 ENCODING 546) AS CHARACTER CCSID 1208)
		) INTO rc;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER )
		RETURNS BOOLEAN
		LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";
		
	CREATE FUNCTION log4j_1_1( IN COMPONENT_NAME CHARACTER,
		IN LOGGER_NAME CHARACTER,
		IN LEVEL CHARACTER,
		IN TEXT CHARACTER )
		RETURNS BOOLEAN
		LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
	
END MODULE;
