BROKER SCHEMA Logging
DECLARE ser NAMESPACE 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';


CREATE COMPUTE MODULE LogRequest_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE concatString character;
		SET concatString = '';
		--CALL ComposeDetails(InputRoot.XMLNSC,concatString);
		--set Environment.Variables.RequestMessage=concatString;
		set Environment.Variables.LogData.DATA3 = CAST(InputRoot.HTTPInputHeader."X-Remote-Addr" AS CHAR);
		set Environment.Variables.RequestMessage=InputRoot.XMLNSC;
		SET Environment.Variables.LoginUsername=InputLocalEnvironment.SOAP.Input.Message.Header.ser:Security.ser:UsernameToken.ser:Username;
		SET Environment.Variables.RequestTimestamp= CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'MM-dd-yyyy HH:mm:ss');
		SET Environment.Variables.RequestID= CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'ddMMyyyyHHmmssSSS');
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		 
		 
		DECLARE rc BOOLEAN;
		CALL initLog4j('brokerlog.xml') into rc;
		IF ( rc = FALSE ) THEN	set Environment.Variables.RequestLoggingError='Error'; END IF;
		
		--Encoding 546
		--CCSID 1208
		CALL log4j_1_1('soa.logger', 'ROLLING_LOGGER','INFO',
		CAST( ASBITSTREAM(InputBody CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId)
		) INTO rc;
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	CREATE PROCEDURE ComposeDetails(IN root REFERENCE,INOUT concatString CHARACTER) BEGIN
		DECLARE fieldName CHARACTER;
		DECLARE fieldValue CHARACTER;
		DECLARE cursor REFERENCE TO root;
		MOVE cursor FIRSTCHILD;
		WHILE LASTMOVE(cursor) Do
		SET fieldName = FIELDNAME(cursor);
		SET fieldValue = FIELDVALUE(cursor);
		if LOWER(fieldName)='channelid' OR fieldName='Channeld' THEN SET Environment.Variables.ChannelId=fieldValue; END IF;
		IF (fieldValue is not null) THEN
		SET  concatString  =  concatString  ||'<'||fieldName||'>' ||fieldValue||'</'||fieldName||'>';
		ELSE
		SET  concatString  =  concatString  ||'<'||fieldName||'>';
		CALL ComposeDetails(cursor, concatString  );
		SET  concatString  =  concatString  ||'</'||fieldName||'>';
		END IF;
		MOVE cursor NEXTSIBLING;
		END WHILE;  
	END;
	
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER )
		RETURNS BOOLEAN
		LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";
		
	CREATE FUNCTION log4j_1_1( IN COMPONENT_NAME CHARACTER,
		IN LOGGER_NAME CHARACTER,
		IN LEVEL CHARACTER,
		IN TEXT CHARACTER )
		RETURNS BOOLEAN
		LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
END MODULE;
