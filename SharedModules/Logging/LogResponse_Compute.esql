BROKER SCHEMA Logging
DECLARE ns NAMESPACE 'http://iibdbdev/bafl';



CREATE COMPUTE MODULE LogResponse_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE ResponseMsg character;
		SET ResponseMsg= '';
		--CALL ComposeDetails(InputRoot.XMLNSC,ResponseMsg);
		set ResponseMsg = CAST( ASBITSTREAM(InputBody CCSID 1208 ENCODING 546) AS CHARACTER CCSID 1208);
		
		DECLARE RequestMsg character;
		set RequestMsg='';
		CALL ComposeDetails(Environment.Variables.RequestMessage,RequestMsg);
		
		--SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.ID='NEW';
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.SERVICE_NAME=Environment.Service.Name;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.OPERATION_NAME=Environment.Service.Operation.Name;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.USERNAME=Environment.Variables.LoginUsername;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.CHANNEL_ID=Environment.Variables.ChannelId;
		--SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.TIMESTAMP=(CAST(CURRENT_DATE AS CHARACTER)||' '||CAST(CURRENT_TIME AS CHARACTER));
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.REQUEST_TIMESTAMP= Environment.Variables.RequestTimestamp;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.REQUEST_MESSAGE=RequestMsg;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.RESPONSE_TIMESTAMP= CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'MM-dd-yyyy HH:mm:ss');
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.RESPONSE_MESSAGE=ResponseMsg;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.DATA1=Environment.Variables.LogData.DATA1;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.DATA2=Environment.Variables.LogData.DATA2;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.DATA3=Environment.Variables.LogData.DATA3;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.DATA4=Environment.Variables.LogData.DATA4;
		SET OutputRoot.XMLNSC.ns:SOA_AUDITLOG.DATA5=Environment.Variables.LogData.DATA5;
		
		
		
		--------------log4j---------
		DECLARE rc BOOLEAN;
		CALL initLog4j('brokerlog.xml') into rc;
		IF ( rc = FALSE ) THEN	set Environment.Variables.ResponseLoggingError='Error'; END IF;
		
		--Encoding 546
		--CCSID 1208
		CALL log4j_1_1('soa.logger', 'ROLLING_LOGGER','INFO',
		CAST( ASBITSTREAM(InputBody CCSID 1208 ENCODING 546) AS CHARACTER CCSID 1208)
		) INTO rc;
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	CREATE PROCEDURE ComposeDetails(IN root REFERENCE,INOUT concatString CHARACTER) BEGIN
		DECLARE fieldName CHARACTER;
		DECLARE fieldValue CHARACTER;
		DECLARE cursor REFERENCE TO root;
		MOVE cursor FIRSTCHILD;
		WHILE LASTMOVE(cursor) Do
		SET fieldName = FIELDNAME(cursor);
		SET fieldValue = FIELDVALUE(cursor);
		if LOWER(fieldName)='channelid' OR fieldName='Channeld' or lower(fieldName)='channel_id' THEN SET Environment.Variables.ChannelId=fieldValue; END IF;
		IF (fieldValue is not null) THEN
		SET  concatString  =  concatString  ||'<'||fieldName||'>' ||fieldValue||'</'||fieldName||'>';
		ELSE
		SET  concatString  =  concatString  ||'<'||fieldName||'>';
		CALL ComposeDetails(cursor, concatString  );
		SET  concatString  =  concatString  ||'</'||fieldName||'>';
		END IF;
		MOVE cursor NEXTSIBLING;
		END WHILE;  
	END;
	
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER )
		RETURNS BOOLEAN
		LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";
		
	CREATE FUNCTION log4j_1_1( IN COMPONENT_NAME CHARACTER,
		IN LOGGER_NAME CHARACTER,
		IN LEVEL CHARACTER,
		IN TEXT CHARACTER )
		RETURNS BOOLEAN
		LANGUAGE JAVA
	EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
END MODULE;
